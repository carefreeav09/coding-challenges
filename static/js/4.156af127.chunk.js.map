{"version":3,"sources":["constants/appConfig.js","components/DepartureTimes/DepartureTimes.js","components/DepartureTimes/Main.js","components/DepartureTimes/index.js"],"names":["API_URL","process","SAN_FRANSISCO_LAT_LNG","lat","lng","GoogleApiWrapper","apiKey","props","vehicles","useState","userLocation","setUserLocation","showPosition","position","useEffect","navigator","geolocation","getCurrentPosition","console","log","className","google","zoom","style","width","height","center","length","map","item","key","id","title","name","icon","url","anchor","maps","Point","scaledSize","Size","lon","MainDepartureComponent","useForm","register","getValues","handleSubmit","agencyList","setAgencyList","vehiclesList","setVehiclesList","routesList","setRoutesList","loading","setLoading","axios","get","then","response","data","agency","catch","error","htmlFor","aria-describedby","placeholder","ref","required","value","onChange","event","target","route","Array","tag","disabled","vehicle"],"mappings":"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","file":"static/js/4.156af127.chunk.js","sourcesContent":["export const API_URL = `${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`;\nexport const SAN_FRANSISCO_LAT_LNG = {lat: 37.7749, lng: 122.4194};\nexport const LONDON_LAT_LNG = {lat: 51.5074, lng: 0.1278}\n\n","import React, { useState, useEffect } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { API_URL, SAN_FRANSISCO_LAT_LNG } from \"../../constants/appConfig\";\n\nconst CustomMarkers = () => <div>Text</div>;\n\nconst DepartureTimes = props => {\n  const { vehicles } = props;\n  const [userLocation, setUserLocation] = useState(SAN_FRANSISCO_LAT_LNG);\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"geo location isnt set by browser\");\n    }\n  };\n\n  const showPosition = position => {\n    setUserLocation(SAN_FRANSISCO_LAT_LNG);\n  };\n\n  useEffect(() => {\n    getLocation();\n    return () => {};\n  }, []);\n\n  const mapStyles = {\n    width: \"100%\",\n    height: \"60vh\"\n  };\n\n  return (\n    <Map\n      className=\"map-style\"\n      google={props.google}\n      zoom={13}\n      style={mapStyles}\n      center={userLocation}\n    >\n      {vehicles &&\n        vehicles.length > 0 &&\n        vehicles.map(item => (\n          <Marker\n            key={item.id}\n            title={item.id}\n            name={item.id}\n            icon={{\n              url: \"https://image.flaticon.com/icons/png/512/171/171255.png\",\n              anchor: new props.google.maps.Point(32,32),\n              scaledSize: new props.google.maps.Size(32,32)\n            }}\n            position={{ lat: item.lat, lng: item.lon }}\n          />\n        ))}\n\n      <Marker name={\"Current location\"} />\n    </Map>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: API_URL\n})(DepartureTimes);\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nimport DepartureTimes from \"./DepartureTimes\";\n\nconst MainDepartureComponent = () => {\n  const { register, handleSubmit, getValues } = useForm();\n  const [agencyList, setAgencyList] = useState([]);\n  const [vehiclesList, setVehiclesList] = useState([]);\n  const [routesList, setRoutesList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"http://webservices.nextbus.com/service/publicJSONFeed?command=agencyList\"\n      )\n      .then(response => {setAgencyList(response.data.agency); setLoading(false)})\n      .catch(error => console.log(error));\n\n    return () => {};\n  }, []);\n\n  const handleAgencySelect = event => {\n    setLoading(true);\n      axios.get(`http://webservices.nextbus.com/service/publicJSONFeed?command=routeList&a=${event.target.value}`)\n      .then(response => {setRoutesList(response.data.route);setLoading(false)})\n  }\n\n  const handleRoutesSelect = event => {\n    setLoading(true);\n    let agency = getValues()?.agency;\n    axios.get(`http://webservices.nextbus.com/service/publicJSONFeed?command=vehicleLocations&a=${agency}&r=${event.target.value}&t=0`)\n    .then(response => {setVehiclesList(response.data.vehicle);setLoading(false)})\n  }\n\n  return (\n    <div className='gradient-background-black'>\n      <div className=\"container py-5\">\n        <div className=\"card p-3 mb-3\">\n          <h3>Departure Times</h3>\n\n          <h6>\n            Create a service that gives real-time departure time for public\n            transportation (use freely available public API). The app should\n            geolocalize the user.\n          </h6>\n\n          <form>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\" className=\"black-text\">\n                    Location\n                  </label>\n                  <select\n                    name=\"location\"\n                    className=\"form-control\"\n                    aria-describedby=\"locationHelp\"\n                    placeholder=\"Select your preferred location\"\n                    ref={register({ required: true })}\n                  >\n                    <option value=\"san\">San Fransisco</option>\n                    {/* <option value=\"lnd\"> London </option> */}\n                  </select>\n                  <small id=\"locationHelp\" className=\"form-text text-muted\">\n                    Choose the location you are in.\n                  </small>\n                </div>\n              </div>\n\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"agency\" className=\"black-text\">\n                    Agency\n                  </label>\n                  <select\n                    name=\"agency\"\n                    className=\"form-control\"\n                    aria-describedby=\"agencyHelp\"\n                    placeholder=\"Select your preferred agency\"\n                    ref={register({ required: true })}\n                    onChange={handleAgencySelect}\n                  >\n                    {agencyList instanceof Array &&\n                      agencyList.map(item => (\n                      <option key={item.tag} value={item.tag}>{item.title}</option>\n                      ))}{\" \"}\n                  </select>\n\n                  <small id=\"agencyHelp\" className=\"form-text text-muted\">\n                    Choose the Agency you are looking for.\n                  </small>\n                </div>\n              </div>\n\n              <div className=\"col\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"routes\" className=\"black-text\">\n                    Routes\n                  </label>\n                  <select\n                    name=\"routes\"\n                    className=\"form-control\"\n                    aria-describedby=\"routesHelp\"\n                    placeholder=\"Select your preferred routes\"\n                    ref={register({ required: true })}\n                    disabled={loading}\n                    onChange={handleRoutesSelect}\n                  >\n                    {routesList instanceof Array &&\n                      routesList.map(item => (\n                      <option key={item.tag} value={item.tag}>{item.title}</option>\n                      ))}{\" \"}\n                  </select>\n\n                  <small id=\"routesHelp\" className=\"form-text text-muted\">\n                    Choose the Routes you are in.\n                  </small>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <DepartureTimes vehicles={vehiclesList} />\n      </div>\n    </div>\n  );\n};\n\nexport default MainDepartureComponent;\n","import MainDepartureComponent from './Main';\n\nexport default MainDepartureComponent;"],"sourceRoot":""}