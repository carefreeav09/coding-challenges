{"version":3,"sources":["layout/loading/Loading.js","layout/loading/index.js","container/App/AsycnComponents.js","routes/PublicRoutes.js","container/App/index.js","serviceWorker.js","index.js","layout/header/index.js","layout/header/Header.js","layout/footer/index.js","layout/footer/Footer.js","layout/layout.js"],"names":["FullWidthDiv","styled","div","Loading","Spinner","color","props","error","className","pastDelay","AsycnAppLayout","loadable","loader","loading","LoadingComponent","AsyncHome","AysncDepartureTimes","PublicRoute","Component","component","Layout","layout","rest","render","withRouter","PublicRoutes","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","href","role","aria-haspopup","aria-labelledby","Footer","children"],"mappings":"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","file":"static/js/main.8d1ca97d.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport styled from 'styled-components';\n\nconst FullWidthDiv = styled.div`\n        display: flex;\n        min-height: 100vh;\n        min-width: 100vw;\n        background: #333;\n        color: white;\n        justify-content: center;\n        align-items : center;\n    `;\n\nconst Loading = () => {\n    return (\n        <FullWidthDiv>\n                  <Spinner color=\"success\" />\n        </FullWidthDiv>\n    )\n}\n\nexport default Loading;\n","import React from 'react';\nimport Loader from './Loading';\n\nconst Loading = props => {\n  if (props.error) {\n    return <div className=\"loader-container\">Error! Please refresh the page</div>;\n  } else if (props.pastDelay) {\n    return (\n      <div className=\"loader-container\">\n        <Loader />\n      </div>\n    );\n  } else {\n    return null; // Avoiding Flash Of Loading Component (<200ms)\n  }\n};\n\nexport default Loading;","import loadable from 'react-loadable';\nimport LoadingComponent from '../../layout/loading';\nimport layout from '../../layout/layout'\n\nexport const AsycnAppLayout = loadable({\n    loader: () => import('../../layout/layout'),\n    loading: LoadingComponent,\n});\n\nexport const AsyncHome = loadable({\n    loader: () => import('../../components/Home'),\n    loading: LoadingComponent\n})\n\nexport const AysncDepartureTimes = loadable({\n    loader: () => import('../../components/DepartureTimes'),\n    loading: LoadingComponent\n})","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default PublicRoute;\n","import React from 'react';\nimport {Route, Switch, withRouter} from 'react-router';\n\nimport {\n    AsycnAppLayout,\n    AsyncHome,\n    AysncDepartureTimes\n} from './AsycnComponents';\n\nimport PublicRoutes from '../../routes/PublicRoutes';\n\nconst App = () => (\n        <Switch>\n            <PublicRoutes exact path='/' layout={AsycnAppLayout} component={AsyncHome} />\n            <PublicRoutes exact path='/departure-times' layout={AsycnAppLayout} component={AysncDepartureTimes} />\n        </Switch>\n)\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {  BrowserRouter as Router } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport \"./assets/css/argon-design-system.css\";\nimport './assets/css/nucleo-icons.css';\nimport './assets/css/nucleo-svg.css'\nimport App from \"./container/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Header from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\nimport {withRouter, Link} from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg stylish-color-dark\">\n      <div className=\"container\">\n        <Link to='/' className=\"navbar-brand\">\n          Coding Challenges\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbar-default\"\n          aria-controls=\"navbar-default\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbar-default\">\n          <div className=\"navbar-collapse-header\">\n            <div className=\"row\">\n              <div className=\"col-6 collapse-brand\">\n                <a>\n                  <img src=\"../../assets/img/brand/blue.png\" />\n                </a>\n              </div>\n              <div className=\"col-6 collapse-close\">\n                <button\n                  type=\"button\"\n                  className=\"navbar-toggler\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#navbar-default\"\n                  aria-controls=\"navbar-default\"\n                  aria-expanded=\"false\"\n                  aria-label=\"Toggle navigation\"\n                >\n                  <span />\n                  <span />\n                </button>\n              </div>\n            </div>\n          </div>\n          <ul className=\"navbar-nav ml-lg-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link nav-link-icon\" href=\"#\">\n                <i className=\"ni ni-favourite-28\" />\n                <span className=\"nav-link-inner--text d-lg-none\">Discover</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link nav-link-icon\" href=\"#\">\n                <i className=\"ni ni-notification-70\" />\n                <span className=\"nav-link-inner--text d-lg-none\">Profile</span>\n              </a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link nav-link-icon\"\n                href=\"#\"\n                id=\"navbar-default_dropdown_1\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i className=\"ni ni-settings-gear-65\" />\n                <span className=\"nav-link-inner--text d-lg-none\">Settings</span>\n              </a>\n              <div\n                className=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"navbar-default_dropdown_1\"\n              >\n                <a className=\"dropdown-item\" href=\"#\">\n                  Action\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  Another action\n                </a>\n                <div className=\"dropdown-divider\" />\n                <a className=\"dropdown-item\" href=\"#\">\n                  Something else here\n                </a>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default withRouter(Header);\n","import Footer from \"./Footer\";\n\nexport default Footer;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer font-small stylish-color-dark pt-4\">\n      {/* Footer Challenges */}\n      <div className=\"container text-center text-md-left\">\n        {/* Grid row */}\n        <div className=\"row\">\n          {/* Grid column */}\n          <div className=\"col-md-4 mx-auto\">\n            {/* Content */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">\n              About this\n            </h5>\n            <p>\n                Solving interview questions and challenges using React JS. All in one frontend solutions. \n                (Maybe backend too at some point not sure)\n            </p>\n          </div>\n          {/* Grid column */}\n          <hr className=\"clearfix w-100 d-md-none\" />\n          {/* Grid column */}\n          <div className=\"col-md-2 mx-auto\">\n            {/* Challenges */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Challenges</h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Link 1</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 2</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 3</a>\n              </li>\n              <li>\n                <a href=\"#!\">Link 4</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        {/* Grid row */}\n      </div>\n      {/* Footer Challenges */}\n      <hr />\n      {/* Call to action */}\n      <ul className=\"list-unstyled list-inline text-center py-2\">\n        <li className=\"list-inline-item\">\n          <h5 className=\"mb-1\">Register for free</h5>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"#!\" className=\"btn btn-danger btn-rounded\">\n            Sign up!\n          </a>\n        </li>\n      </ul>\n      {/* Call to action */}\n      <hr />\n      {/* Social buttons */}\n      <ul className=\"list-unstyled list-inline text-center\">\n        <li className=\"list-inline-item\">\n          <a className=\"btn-floating btn-fb mx-1\">\n            <i className=\"fab fa-facebook-f\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a className=\"btn-floating btn-tw mx-1\">\n            <i className=\"fab fa-twitter\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a className=\"btn-floating btn-gplus mx-1\">\n            <i className=\"fab fa-google-plus-g\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a className=\"btn-floating btn-li mx-1\">\n            <i className=\"fab fa-linkedin-in\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a className=\"btn-floating btn-dribbble mx-1\">\n            <i className=\"fab fa-dribbble\"> </i>\n          </a>\n        </li>\n      </ul>\n      {/* Social buttons */}\n      {/* Copyright */}\n      <div className=\"footer-copyright text-center py-3\">\n        © 2020 Copyright:\n        <a href=\"https://carefreeav09.github.io\"> carefreecoders</a>\n      </div>\n      {/* Copyright */}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\nconst Layout = props => {\n  return (\n    <>\n      <Header />\n      {props.children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n"],"sourceRoot":""}